"use strict";//
//    _____________  ____    __________  ____      _________________________
//   / ___/_  __/\ \/ / /   / ____/ __ \/ __ )    / / ____/ ____/_  __/ ___/
//   \__ \ / /    \  / /   / __/ / / / / __  |_  / / __/ / /     / /  \__ \
//  ___/ // /     / / /___/ /___/ /_/ / /_/ / /_/ / /___/ /___  / /  ___/ /
// /____//_/     /_/_____/_____/\____/_____/\____/_____/\____/ /_/  /____/
//
//  special thanks to Raphael Amorim (@raphamorim) for the core concept,
//  because this is basicly a remake of nativeCSS (https://github.com/raphamorim/native-css)
//
Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _fs=_interopRequireDefault(require("fs")),_css=_interopRequireDefault(require("css")),_fetch=require("fetch"),_transformRules=_interopRequireDefault(require("./lib/transformRules.js"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var styleObjects=/*#__PURE__*/function(){function a(){_classCallCheck(this,a)}return _createClass(a,[{key:"indentObject",value:function d(a,b){var c=this;return JSON.stringify(a,null,b||0)}},{key:"nameGenerator",value:function b(a){return a=a.replace(/\s\s+/g," "),a=a.replace(/[^a-zA-Z0-9]/g,"_"),a=a.replace(/^_+/g,""),a=a.replace(/_+$/g,""),a}},{key:"mediaNameGenerator",value:function b(a){return"@media "+a}},{key:"transform",value:function c(a){var b={};return(0,_transformRules.default)(this,a.stylesheet.rules,b),b}},{key:"isUrl",value:function c(a){// feel free to use a better pattern
var b=/^(?:(?:http|https|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?:(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[0-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))|localhost)(?::\d{2,5})?(?:(\/|\?|#)[^\s]*)?$/i;return!!b.test(a)}},{key:"fetchUrlAsync",value:function b(a){return new Promise(function(b,c){(0,_fetch.fetchUrl)(a,function(a,d,e){if(a)throw a;try{b(e.toString())}catch(a){c(a)}})})}},{key:"convertAsync",value:function d(a){var b=this,c=process.cwd()+"/"+a;return new Promise(function(d,e){if(!b.isUrl(a)){if(require("fs").existsSync(c)){var f=_fs.default.readFileSync(c,"utf-8");return f=_css.default.parse(f,{silent:!1,source:c}),d(b.transform.apply(b,f))}e(new Error("Ooops!\nError: CSS file not found!"))}else return b.fetchUrlAsync(a).catch(function(a){e(a)}).then(function(a){var a=_css.default.parse(a,{silent:!1,source:c});d(b.transform(a))})})}},{key:"convert",value:function e(a){var b,c=this,d=a;// PATH given
if(require("fs").existsSync(d))b=_fs.default.readFileSync(d,"utf-8");// STRING given
else if("string"==typeof a){// TBD: refactor file/string verification
if(!~a.indexOf("{"))return"Ooops!\nError: CSS file not found!";b=a}// Buffer given
else if(a instanceof Buffer)b=a.toString();// URL given
else return this.isUrl(a)?this.convertAsync(a):"Ooops!\nError: CSS file not found!";return b=_css.default.parse(b,{silent:!1,source:d}),c.transform(b)}},{key:"generateFile",value:function f(a,b,c){if(!b||-1<b.indexOf("--"))return console.log("Please, set a output path!");var d,e=transformhis;return c?(_fs.default.writeFileSync(b,"var styles = StyleSheet.create({\n"),d=e.indentObject(a,2),void _fs.default.appendFileSync(b,d+"\n})")):void(d=e.indentObject({styles:a},2),_fs.default.writeFileSync(b,d))}}]),a}(),_default=new styleObjects;exports.default=_default;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,